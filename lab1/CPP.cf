-- Program defifinition
Prog. 	Program ::= [Def] ;
terminator Def "" ;

-- Comments
comment 	"#" ;
comment 	"//" ;
comment 	"/*" "*/" ;

-- Functions definition
DFun. 		Def ::= Type Id "(" [Arg] ")" "{" [Stm] "}" ;
separator	Arg "," ;
terminator 	Stm "" ;

-- typedefs TODO

-- using	(DOES NOT WORK WITH std::[type])
QConuse. 	Def ::= "using" [Id] ";" ;

-- QualCon Def (UGLY)
QCondec.	Stm ::= Id "::" Type Id ";" ;

-- Argument Decl
ADecl. 		Arg ::= Type Id ;

-- Statements (Expressions followed by ";")
SExp.		Stm ::= Exp ";" ;

-- Statement (declaration)
SDecl. 		Stm ::= Type Id ";" ;
SDecls.		Stm ::= Type Id "," [Id] ";" ;
SInit. 		Stm ::= Type Id "=" Exp ";" ;

-- Statemens (return, while, block, ifelse)
SReturn. 	Stm ::= "return" Exp ";" ;
SWhile.		Stm ::= "while" "(" Exp ")" Stm ;
SBlock. 	Stm ::= "{" [Stm] "}" ;
SIfElse.	Stm ::= "if" "(" Exp ")" Stm "else" Stm ;

-- Coercion levels
EInt. 		Exp15 ::= Integer ;
EString. 	Exp15 ::= String ;
EQcon.		Exp15 ::= [Id] ;
ELShift.	Exp10 ::= Exp10 "<<" Exp11 ;
ERShift.	Exp10 ::= Exp10 ">>" Exp11 ;

coercions 	Exp 15 ;
separator 	Exp "," ;

-- Types
Tbool.		Type ::= "bool" ;
Tdouble.	Type ::= "double" ;
Tint.		Type ::= "int" ;
Tstring. 	Type ::= "string" ;
Tvoid.		Type ::= "void" ;

-- Id
token Id (letter (letter | digit | '_')*) ;
separator nonempty Id "::" ;